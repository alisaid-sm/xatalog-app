{"version":3,"sources":["pages/Test.jsx","routes/index.jsx","redux/reducers/Navbar.js","redux/reducers/Auth.js","redux/reducers/index.js","redux/store.js","App.jsx","index.js"],"names":["Test","color","expand","light","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","inNavbar","nav","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","Router","path","component","initialState","isActiveBottomNav","isActiveNav","Navbar","state","action","type","Perm","jwt","decode","localStorage","getItem","role_name","haveSholawat","Auth","payload","reducers","combineReducers","middleware","applyMiddleware","thunk","store","createStore","App","moment","locale","ReactDOM","render","document","getElementById"],"mappings":"6mBA+DeA,EA5DF,WACT,OACI,8BACA,eAAC,IAAD,CACIC,MAAM,QACNC,OAAO,KACPC,OAAK,EAHT,UAKI,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,wBAGA,cAACC,EAAA,EAAD,CAAeC,QAAS,eACxB,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACA,eAACC,EAAA,EAAD,CACIC,UAAU,UACVF,QAAM,EAFV,UAII,cAACG,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAASR,KAAK,eAAd,0BAIA,cAACO,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAASR,KAAK,2CAAd,sBAIA,eAACS,EAAA,EAAD,CACAC,UAAQ,EACRC,KAAG,EAFH,UAIA,cAACC,EAAA,EAAD,CACIC,OAAK,EACLF,KAAG,EAFP,qBAMA,eAACG,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACI,cAACC,EAAA,EAAD,uBAGA,cAACA,EAAA,EAAD,uBAGA,cAACA,EAAA,EAAD,CAAcC,SAAO,IACrB,cAACD,EAAA,EAAD,6BAMR,cAACE,EAAA,EAAD,mCC1CG,SAASC,IAQtB,OACE,cAAC,IAAD,UAEI,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1B,Q,6BCzB/B2B,EAAe,CACnBC,mBAAmB,EACnBC,aAAa,GAoBAC,EAjBA,WAAwC,IAAvCC,EAAsC,uDAA9BJ,EAAcK,EAAgB,uDAAP,GAC7C,OAAOA,EAAOC,MACZ,IAAK,oBACJ,OAAO,2BACHF,GADJ,IAECH,mBAAoBG,EAAMH,oBAE5B,IAAK,aACH,OAAO,2BACFG,GADL,IAEEF,aAAcE,EAAMF,cAExB,QACE,OAAOE,I,SCdPJ,EAAe,CACjBO,K,OAHSC,EAAIC,OAAOC,aAAaC,QAAQ,WAAa,CAACC,UAAW,IAIlEC,cAAc,GAoBDC,EAjBF,WAAwC,IAAvCV,EAAsC,uDAA9BJ,EAAcK,EAAgB,uDAAP,GAC3C,OAAOA,EAAOC,MACZ,IAAK,oBACD,OAAO,2BACDF,GADN,IAEGG,KAAMF,EAAOU,UAEpB,IAAK,uBACH,OAAO,2BACAX,GADP,IAEIS,cAAeT,EAAMS,eAE3B,QACE,OAAOT,ICbAY,EALEC,YAAgB,CAC/Bd,SACAW,S,SCFII,EAAaC,YACfC,KAQWC,EALDC,YACVN,EACAE,GCSWK,MAZf,WACE,OACE,cAAC,WAAD,UACE,8BACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACI,cAAC,EAAD,WCFZG,IAAOC,OAAO,MAEdC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.33cc386c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from 'reactstrap';\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div>\r\n        <Navbar\r\n            color=\"light\"\r\n            expand=\"md\"\r\n            light\r\n        >\r\n            <NavbarBrand href=\"/\">\r\n            reactstrap\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={function noRefCheck(){}} />\r\n            <Collapse navbar>\r\n            <Nav\r\n                className=\"me-auto\"\r\n                navbar\r\n            >\r\n                <NavItem>\r\n                <NavLink href=\"/components/\">\r\n                    Components\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">\r\n                    GitHub\r\n                </NavLink>\r\n                </NavItem>\r\n                <UncontrolledDropdown\r\n                inNavbar\r\n                nav\r\n                >\r\n                <DropdownToggle\r\n                    caret\r\n                    nav\r\n                >\r\n                    Options\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <DropdownItem>\r\n                    Option 1\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                    Option 2\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>\r\n                    Reset\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </Nav>\r\n            <NavbarText>\r\n                Simple Text\r\n            </NavbarText>\r\n            </Collapse>\r\n        </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test;","// import { useState } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter,\r\n  Switch\r\n} from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\n// import PrivateRoute from \"../component/Route/PrivateRoute\";\r\n// import PublicRoute from \"../component/Route/PublicRoute\";\r\n// import { Header, Footer, Sidebar } from '../pages/template/template';\r\nimport Test from '../pages/Test'\r\n\r\nexport default function Router() {\r\n  // let { Auth, Navbar } = useSelector(state => state);\r\n\r\n  // const [ isActiveBars, setIsActiveBars ] = useState(false);\r\n  // const toggleBar = () => {\r\n  //   setIsActiveBars( !isActiveBars )\r\n  // }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n        {/* {Navbar.isActiveNav? <Header burgerClick={ toggleBar } /> : null } */}\r\n        <Switch>\r\n          {/* <PublicRoute path=\"/login\" restricted={true} component={ SplashScreen } /> */}\r\n          <Route path='/' component={Test} />\r\n          {/* { (!Auth.haveSholawat) ? <PrivateRoute path=\"/yuk-baca-sholawat\" exact component={ YukBacaSholawat } /> : null } */}\r\n        </Switch>\r\n        {/* <Switch>\r\n          <Redirect from='*' to='/' />\r\n        </Switch> */}\r\n    </BrowserRouter>\r\n  );\r\n}","const initialState = {\r\n  isActiveBottomNav: true,\r\n  isActiveNav: true\r\n}\r\n\r\nconst Navbar = (state = initialState, action = {}) => {\r\n  switch(action.type) {\r\n    case \"TOGGLE_BOTTOM_NAV\":\r\n    \treturn {\r\n    \t\t...state,\r\n    \t\tisActiveBottomNav: !state.isActiveBottomNav\r\n    \t}\r\n    case \"TOGGLE_NAV\":\r\n      return {\r\n        ...state,\r\n        isActiveNav: !state.isActiveNav\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default Navbar;","import jwt from 'jsonwebtoken';\r\n\r\nconst Perm = jwt.decode(localStorage.getItem('token')) || {role_name: ''};\r\n\r\nconst initialState = {\r\n    Perm,\r\n    haveSholawat: false\r\n  }\r\n  \r\n  const Auth = (state = initialState, action = {}) => {\r\n    switch(action.type) {\r\n      case \"UPDATE_STATE_PERM\":\r\n          return {\r\n             ...state,\r\n             Perm: action.payload\r\n          }\r\n      case \"TOGGLE_HAVE_SHOLAWAT\":\r\n        return {\r\n            ...state,\r\n            haveSholawat: !state.haveSholawat\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default Auth;","import { combineReducers } from \"redux\";\r\nimport Navbar from \"./Navbar\";\r\nimport Auth from \"./Auth\";\r\n\r\nconst reducers = combineReducers({\r\n  Navbar,\r\n  Auth\r\n});\r\n\r\nexport default reducers;","import { createStore, applyMiddleware, } from 'redux'\r\nimport reducers from './reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middleware = applyMiddleware(\r\n    thunk\r\n)\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    middleware\r\n)\r\n\r\nexport default store","import { Fragment } from 'react';\r\nimport './App.css';\r\nimport Routes from './routes'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Provider store={store}>\r\n            <Routes />\r\n        </Provider>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import axios from 'axios';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'moment/locale/id';\r\n\r\nimport App from './App';\r\n\r\n// axios.defaults.headers.token = localStorage.getItem('token');\r\nmoment.locale('id');\r\n\r\nReactDOM.render( <App />, document.getElementById('root') );"],"sourceRoot":""}